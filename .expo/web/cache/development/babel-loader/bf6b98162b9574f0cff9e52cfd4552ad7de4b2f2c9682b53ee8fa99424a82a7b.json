{"ast":null,"code":"import normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\nimport { warnOnce } from '../../modules/warnOnce';\nconst emptyObject = {};\nconst defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport const createBoxShadowValue = style => {\n  const {\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius\n  } = style;\n  const {\n    height,\n    width\n  } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\nexport const createTextShadowValue = style => {\n  const {\n    textShadowColor,\n    textShadowOffset,\n    textShadowRadius\n  } = style;\n  const {\n    height,\n    width\n  } = textShadowOffset || defaultOffset;\n  const radius = textShadowRadius || 0;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(radius);\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\nconst mapTransform = transform => {\n  const type = Object.keys(transform)[0];\n  const value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return `${type}(${value.join(',')})`;\n  } else {\n    const normalizedValue = normalizeValueWithProperty(value, type);\n    return `${type}(${normalizedValue})`;\n  }\n};\nexport const createTransformValue = value => {\n  return value.map(mapTransform).join(' ');\n};\nconst PROPERTIES_STANDARD = {\n  borderBottomEndRadius: 'borderEndEndRadius',\n  borderBottomStartRadius: 'borderEndStartRadius',\n  borderTopEndRadius: 'borderStartEndRadius',\n  borderTopStartRadius: 'borderStartStartRadius',\n  borderEndColor: 'borderInlineEndColor',\n  borderEndStyle: 'borderInlineEndStyle',\n  borderEndWidth: 'borderInlineEndWidth',\n  borderStartColor: 'borderInlineStartColor',\n  borderStartStyle: 'borderInlineStartStyle',\n  borderStartWidth: 'borderInlineStartWidth',\n  end: 'insetInlineEnd',\n  marginEnd: 'marginInlineEnd',\n  marginHorizontal: 'marginInline',\n  marginStart: 'marginInlineStart',\n  marginVertical: 'marginBlock',\n  paddingEnd: 'paddingInlineEnd',\n  paddingHorizontal: 'paddingInline',\n  paddingStart: 'paddingInlineStart',\n  paddingVertical: 'paddingBlock',\n  start: 'insetInlineStart'\n};\nconst ignoredProps = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true\n};\nexport const preprocess = (originalStyle, options = {}) => {\n  const style = originalStyle || emptyObject;\n  const nextStyle = {};\n  if (options.shadow === true, style.shadowColor != null || style.shadowOffset != null || style.shadowOpacity != null || style.shadowRadius != null) {\n    warnOnce('shadowStyles', `\"shadow*\" style props are deprecated. Use \"boxShadow\".`);\n    const boxShadowValue = createBoxShadowValue(style);\n    if (boxShadowValue != null && nextStyle.boxShadow == null) {\n      const {\n        boxShadow\n      } = style;\n      const value = boxShadow ? `${boxShadow}, ${boxShadowValue}` : boxShadowValue;\n      nextStyle.boxShadow = value;\n    }\n  }\n  if (options.textShadow === true, style.textShadowColor != null || style.textShadowOffset != null || style.textShadowRadius != null) {\n    warnOnce('textShadowStyles', `\"textShadow*\" style props are deprecated. Use \"textShadow\".`);\n    const textShadowValue = createTextShadowValue(style);\n    if (textShadowValue != null && nextStyle.textShadow == null) {\n      const {\n        textShadow\n      } = style;\n      const value = textShadow ? `${textShadow}, ${textShadowValue}` : textShadowValue;\n      nextStyle.textShadow = value;\n    }\n  }\n  for (const originalProp in style) {\n    if (ignoredProps[originalProp] != null || originalProp === 'shadowColor' || originalProp === 'shadowOffset' || originalProp === 'shadowOpacity' || originalProp === 'shadowRadius' || originalProp === 'textShadowColor' || originalProp === 'textShadowOffset' || originalProp === 'textShadowRadius') {\n      continue;\n    }\n    const originalValue = style[originalProp];\n    const prop = PROPERTIES_STANDARD[originalProp] || originalProp;\n    let value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || prop !== originalProp && style[prop] != null) {\n      continue;\n    }\n    if (prop === 'aspectRatio' && typeof value === 'number') {\n      nextStyle[prop] = value.toString();\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        warnOnce('fontVariant', '\"fontVariant\" style array value is deprecated. Use space-separated values.');\n        value = value.join(' ');\n      }\n      nextStyle[prop] = value;\n    } else if (prop === 'textAlignVertical') {\n      warnOnce('textAlignVertical', '\"textAlignVertical\" style is deprecated. Use \"verticalAlign\".');\n      if (style.verticalAlign == null) {\n        nextStyle.verticalAlign = value === 'center' ? 'middle' : value;\n      }\n    } else if (prop === 'transform') {\n      if (Array.isArray(value)) {\n        value = createTransformValue(value);\n      }\n      nextStyle.transform = value;\n    } else {\n      nextStyle[prop] = value;\n    }\n  }\n  return nextStyle;\n};\nexport default preprocess;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","warnOnce","emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","offsetX","offsetY","blurRadius","color","createTextShadowValue","textShadowColor","textShadowOffset","textShadowRadius","radius","mapTransform","transform","type","Object","keys","value","join","normalizedValue","createTransformValue","map","PROPERTIES_STANDARD","borderBottomEndRadius","borderBottomStartRadius","borderTopEndRadius","borderTopStartRadius","borderEndColor","borderEndStyle","borderEndWidth","borderStartColor","borderStartStyle","borderStartWidth","end","marginEnd","marginHorizontal","marginStart","marginVertical","paddingEnd","paddingHorizontal","paddingStart","paddingVertical","start","ignoredProps","elevation","overlayColor","resizeMode","tintColor","preprocess","originalStyle","options","nextStyle","shadow","boxShadowValue","boxShadow","textShadow","textShadowValue","originalProp","originalValue","prop","prototype","hasOwnProperty","call","toString","Array","isArray","length","verticalAlign"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/exports/StyleSheet/preprocess.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from './compiler/normalizeColor';\nimport normalizeValueWithProperty from './compiler/normalizeValueWithProperty';\nimport { warnOnce } from '../../modules/warnOnce';\n\nconst emptyObject = {};\n\n/**\n * Shadows\n */\n\nconst defaultOffset = { height: 0, width: 0 };\n\nexport const createBoxShadowValue = (style: Object): void | string => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (\n    color != null &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport const createTextShadowValue = (style: Object): void | string => {\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style;\n  const { height, width } = textShadowOffset || defaultOffset;\n  const radius = textShadowRadius || 0;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(radius);\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (\n    color &&\n    (height !== 0 || width !== 0 || radius !== 0) &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\nconst mapTransform = (transform: Object): string => {\n  const type = Object.keys(transform)[0];\n  const value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return `${type}(${value.join(',')})`;\n  } else {\n    const normalizedValue = normalizeValueWithProperty(value, type);\n    return `${type}(${normalizedValue})`;\n  }\n};\nexport const createTransformValue = (value: Array<Object>): string => {\n  return value.map(mapTransform).join(' ');\n};\n\nconst PROPERTIES_STANDARD: { [key: string]: string } = {\n  borderBottomEndRadius: 'borderEndEndRadius',\n  borderBottomStartRadius: 'borderEndStartRadius',\n  borderTopEndRadius: 'borderStartEndRadius',\n  borderTopStartRadius: 'borderStartStartRadius',\n  borderEndColor: 'borderInlineEndColor',\n  borderEndStyle: 'borderInlineEndStyle',\n  borderEndWidth: 'borderInlineEndWidth',\n  borderStartColor: 'borderInlineStartColor',\n  borderStartStyle: 'borderInlineStartStyle',\n  borderStartWidth: 'borderInlineStartWidth',\n  end: 'insetInlineEnd',\n  marginEnd: 'marginInlineEnd',\n  marginHorizontal: 'marginInline',\n  marginStart: 'marginInlineStart',\n  marginVertical: 'marginBlock',\n  paddingEnd: 'paddingInlineEnd',\n  paddingHorizontal: 'paddingInline',\n  paddingStart: 'paddingInlineStart',\n  paddingVertical: 'paddingBlock',\n  start: 'insetInlineStart'\n};\n\nconst ignoredProps = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true\n};\n\n/**\n * Preprocess styles\n */\nexport const preprocess = <T: {| [key: string]: any |}>(\n  originalStyle: T,\n  options?: { shadow?: boolean, textShadow?: boolean } = {}\n): T => {\n  const style = originalStyle || emptyObject;\n  const nextStyle = {};\n\n  // Convert shadow styles\n  if (\n    (options.shadow === true,\n    style.shadowColor != null ||\n      style.shadowOffset != null ||\n      style.shadowOpacity != null ||\n      style.shadowRadius != null)\n  ) {\n    warnOnce(\n      'shadowStyles',\n      `\"shadow*\" style props are deprecated. Use \"boxShadow\".`\n    );\n    const boxShadowValue = createBoxShadowValue(style);\n    if (boxShadowValue != null && nextStyle.boxShadow == null) {\n      const { boxShadow } = style;\n      const value = boxShadow\n        ? `${boxShadow}, ${boxShadowValue}`\n        : boxShadowValue;\n      nextStyle.boxShadow = value;\n    }\n  }\n\n  // Convert text shadow styles\n  if (\n    (options.textShadow === true,\n    style.textShadowColor != null ||\n      style.textShadowOffset != null ||\n      style.textShadowRadius != null)\n  ) {\n    warnOnce(\n      'textShadowStyles',\n      `\"textShadow*\" style props are deprecated. Use \"textShadow\".`\n    );\n    const textShadowValue = createTextShadowValue(style);\n    if (textShadowValue != null && nextStyle.textShadow == null) {\n      const { textShadow } = style;\n      const value = textShadow\n        ? `${textShadow}, ${textShadowValue}`\n        : textShadowValue;\n      nextStyle.textShadow = value;\n    }\n  }\n\n  for (const originalProp in style) {\n    if (\n      // Ignore some React Native styles\n      ignoredProps[originalProp] != null ||\n      originalProp === 'shadowColor' ||\n      originalProp === 'shadowOffset' ||\n      originalProp === 'shadowOpacity' ||\n      originalProp === 'shadowRadius' ||\n      originalProp === 'textShadowColor' ||\n      originalProp === 'textShadowOffset' ||\n      originalProp === 'textShadowRadius'\n    ) {\n      continue;\n    }\n\n    const originalValue = style[originalProp];\n    const prop = PROPERTIES_STANDARD[originalProp] || originalProp;\n    let value = originalValue;\n\n    if (\n      !Object.prototype.hasOwnProperty.call(style, originalProp) ||\n      (prop !== originalProp && style[prop] != null)\n    ) {\n      continue;\n    }\n\n    if (prop === 'aspectRatio' && typeof value === 'number') {\n      nextStyle[prop] = value.toString();\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        warnOnce(\n          'fontVariant',\n          '\"fontVariant\" style array value is deprecated. Use space-separated values.'\n        );\n        value = value.join(' ');\n      }\n      nextStyle[prop] = value;\n    } else if (prop === 'textAlignVertical') {\n      warnOnce(\n        'textAlignVertical',\n        '\"textAlignVertical\" style is deprecated. Use \"verticalAlign\".'\n      );\n      if (style.verticalAlign == null) {\n        nextStyle.verticalAlign = value === 'center' ? 'middle' : value;\n      }\n    } else if (prop === 'transform') {\n      if (Array.isArray(value)) {\n        value = createTransformValue(value);\n      }\n      nextStyle.transform = value;\n    } else {\n      nextStyle[prop] = value;\n    }\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default preprocess;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}