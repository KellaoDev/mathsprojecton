{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kellao\\\\Desktop\\\\mathsprojecton-main\\\\screens\\\\mathematicsDiscrete\\\\NumbersCheck.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NumbersCheck = function NumbersCheck(props) {\n  var navigation = props.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    number = _useState2[0],\n    setNumber = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPrimeResult = _useState4[0],\n    setIsPrimeResult = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isEvenResult = _useState6[0],\n    setIsEvenResult = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPositiveResult = _useState8[0],\n    setIsPositiveResult = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isPerfectResult = _useState10[0],\n    setIsPerfectResult = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPerfectSquareResult = _useState12[0],\n    setIsPerfectSquareResult = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isDivisorsResult = _useState14[0],\n    setIsDivisorsResult = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isAbsoluteResult = _useState16[0],\n    setIsAbsoluteResult = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isCompositeResult = _useState18[0],\n    setIsCompositeResult = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    errorMessage = _useState20[0],\n    setErrorMessage = _useState20[1];\n  var isPrime = function isPrime(num) {\n    if (num <= 1) return false;\n    for (var i = 2; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) return false;\n    }\n    return true;\n  };\n  var isEven = function isEven(num) {\n    return num % 2 === 0;\n  };\n  var isPositive = function isPositive(num) {\n    if (num > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var isPerfect = function isPerfect(num) {\n    var sum = 1;\n    for (var i = 2; i * i <= num; i++) {\n      if (num % i === 0) {\n        sum += i;\n        if (i * i !== num) {\n          sum += num / i;\n        }\n      }\n    }\n    return sum === num && num !== 1;\n  };\n  var isPerfectSquare = function isPerfectSquare(num) {\n    var sqrt = Math.sqrt(num);\n    return sqrt === Math.floor(sqrt);\n  };\n  var isDivisors = function isDivisors(num) {\n    if (num < 1) return [];\n    var divisors = [];\n    for (var i = 1; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) {\n        divisors.push(i);\n        if (i !== num / i) {\n          divisors.push(num / i);\n        }\n      }\n    }\n    return divisors.sort(function (a, b) {\n      return a - b;\n    });\n  };\n  var isAbsolute = function isAbsolute(num) {\n    return Math.abs(num);\n  };\n  var isComposite = function isComposite(num) {\n    if (num <= 1) return false;\n    for (var i = 2; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) return true;\n    }\n    return false;\n  };\n  var checkNumber = function checkNumber() {\n    if (number.trim() === '') {\n      Keyboard.dismiss();\n      setErrorMessage('Por favor, insira um valor antes de analisar.');\n      return;\n    }\n    Keyboard.dismiss();\n    var num = parseInt(number);\n    setIsPrimeResult(isPrime(num));\n    setIsEvenResult(isEven(num));\n    setIsPositiveResult(isPositive(num));\n    setIsPerfectResult(isPerfect(num));\n    setIsPerfectSquareResult(isPerfectSquare(num));\n    setIsDivisorsResult(isDivisors(num));\n    setIsAbsoluteResult(isAbsolute(num));\n    setIsCompositeResult(isComposite(num));\n  };\n  var handleInputChange = function handleInputChange(text) {\n    if (/^-?\\d*$/.test(text)) {\n      setIsPrimeResult(null);\n      setIsEvenResult(null);\n      setIsPositiveResult(null);\n      setIsPerfectResult(null);\n      setIsPerfectSquareResult(null);\n      setIsDivisorsResult([]);\n      setIsAbsoluteResult(null);\n      setIsCompositeResult(null);\n      setErrorMessage(null);\n      setNumber(text);\n    } else {\n      setErrorMessage('Por favor, insira apenas números inteiros.');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.hav,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: _jsxDEV(Text, {\n          style: styles.title,\n          children: \"N\\xFAmero Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(Text, {\n          style: styles.text,\n          children: \"Digite um n\\xFAmero inteiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, _this), _jsxDEV(View, {\n          children: _jsxDEV(TextInput, {\n            style: styles.textInput,\n            keyboardType: \"numeric\",\n            value: number,\n            onChangeText: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, _this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: checkNumber,\n          children: _jsxDEV(Text, {\n            style: styles.result,\n            children: \"Analisar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, _this), errorMessage && _jsxDEV(Text, {\n          style: styles.error,\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.main,\n        children: [isPrimeResult !== null && isPrimeResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPrimeResult ? `${number} é primo.` : `${number} não é primo.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, _this), isEvenResult !== null && isEvenResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isEvenResult ? `${number} é par.` : `${number} é impar.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, _this), isPositiveResult !== null && isPositiveResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPositiveResult ? `${number} é positivo.` : `${number} é negativo.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, _this), isPerfectResult !== null && isPerfectResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPerfectResult ? `${number} é um número perfeito.` : `${number} não é um número perfeito.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, _this), isPerfectSquareResult !== null && isPerfectSquareResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPerfectSquareResult ? `${number} é um quadrado perfeito.` : `${number} não é um quadrado perfeito.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, _this), isDivisorsResult.length > 0 && _jsxDEV(Text, {\n          style: styles.result,\n          children: `Divisores de ${number}: ${isDivisorsResult.join(', ')}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, _this), isAbsoluteResult !== null && isAbsoluteResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: `O valor absoluto de ${number} é: ${isAbsoluteResult}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, _this), isCompositeResult !== null && isCompositeResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isCompositeResult ? `${number} é composto.` : `${number} não é composto.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, _this), _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Numbers Help');\n      },\n      style: styles.helpButton,\n      children: _jsxDEV(Text, {\n        style: styles.textHelp,\n        children: \"Precisa de ajuda?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  hav: {\n    flex: 1\n  },\n  header: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 40\n  },\n  title: {\n    fontSize: 24\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  textHelp: {\n    fontSize: 18\n  },\n  textInput: {\n    width: '80%',\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4,\n    alignSelf: 'center',\n    textAlign: 'center'\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  helpButton: {\n    backgroundColor: 'lightblue',\n    paddingVertical: 15,\n    alignItems: 'center'\n  },\n  button: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'lightblue',\n    borderRadius: 5,\n    paddingVertical: 10,\n    alignSelf: 'center',\n    marginBottom: 60\n  },\n  result: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20,\n    marginVertical: 2\n  },\n  error: {\n    textAlign: 'center',\n    fontSize: 18\n  }\n});\nexport default NumbersCheck;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","TextInput","Keyboard","StyleSheet","jsxDEV","_jsxDEV","NumbersCheck","props","navigation","_useState","_useState2","_slicedToArray","number","setNumber","_useState3","_useState4","isPrimeResult","setIsPrimeResult","_useState5","_useState6","isEvenResult","setIsEvenResult","_useState7","_useState8","isPositiveResult","setIsPositiveResult","_useState9","_useState10","isPerfectResult","setIsPerfectResult","_useState11","_useState12","isPerfectSquareResult","setIsPerfectSquareResult","_useState13","_useState14","isDivisorsResult","setIsDivisorsResult","_useState15","_useState16","isAbsoluteResult","setIsAbsoluteResult","_useState17","_useState18","isCompositeResult","setIsCompositeResult","_useState19","_useState20","errorMessage","setErrorMessage","isPrime","num","i","Math","sqrt","isEven","isPositive","isPerfect","sum","isPerfectSquare","floor","isDivisors","divisors","push","sort","a","b","isAbsolute","abs","isComposite","checkNumber","trim","dismiss","parseInt","handleInputChange","text","test","style","styles","container","children","hav","header","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","textInput","keyboardType","value","onChangeText","button","onPress","result","error","main","undefined","length","join","navigate","helpButton","textHelp","create","flex","justifyContent","alignItems","marginVertical","fontSize","textAlign","width","height","borderWidth","borderRadius","alignSelf","backgroundColor","paddingVertical","marginBottom","fontWeight"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/screens/mathematicsDiscrete/NumbersCheck.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, TextInput, Keyboard, StyleSheet } from 'react-native';\r\n\r\nconst NumbersCheck = (props) => {\r\n\r\n    const navigation = props.navigation\r\n\r\n    const [number, setNumber] = useState('')\r\n    const [isPrimeResult, setIsPrimeResult] = useState(null)\r\n    const [isEvenResult, setIsEvenResult] = useState(null)\r\n    const [isPositiveResult, setIsPositiveResult] = useState(null)\r\n    const [isPerfectResult, setIsPerfectResult] = useState(null)\r\n    const [isPerfectSquareResult, setIsPerfectSquareResult] = useState(null)\r\n    const [isDivisorsResult, setIsDivisorsResult] = useState([])\r\n    const [isAbsoluteResult, setIsAbsoluteResult] = useState(null)\r\n    const [isCompositeResult, setIsCompositeResult] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const isPrime = (num) => {\r\n        if (num <= 1) return false\r\n        for (let i = 2; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const isEven = (num) => {\r\n        return num % 2 === 0\r\n    }\r\n\r\n    const isPositive = (num) => {\r\n        if (num > 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const isPerfect = (num) => {\r\n        let sum = 1\r\n        for (let i = 2; i * i <= num; i++) {\r\n            if (num % i === 0) {\r\n                sum += i\r\n                if (i * i !== num) {\r\n                    sum += num / i\r\n                }\r\n            }\r\n        }\r\n        return sum === num && num !== 1\r\n    }\r\n\r\n    const isPerfectSquare = (num) => {\r\n        const sqrt = Math.sqrt(num)\r\n        return sqrt === Math.floor(sqrt)\r\n    }\r\n\r\n    const isDivisors = (num) => {\r\n        if (num < 1) return []\r\n        const divisors = []\r\n        for (let i = 1; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) {\r\n                divisors.push(i)\r\n                if (i !== num / i) {\r\n                    divisors.push(num / i)\r\n                }\r\n            }\r\n        }\r\n        return divisors.sort((a, b) => a - b)\r\n    }\r\n\r\n    const isAbsolute = (num) => {\r\n        return Math.abs(num)\r\n    }\r\n\r\n    const isComposite = (num) => {\r\n        if (num <= 1) return false\r\n        for (let i = 2; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkNumber = () => {\r\n        if (number.trim() === '') {\r\n            Keyboard.dismiss()\r\n            setErrorMessage('Por favor, insira um valor antes de analisar.')\r\n            return\r\n        }\r\n        Keyboard.dismiss()\r\n        const num = parseInt(number)\r\n        setIsPrimeResult(isPrime(num))\r\n        setIsEvenResult(isEven(num))\r\n        setIsPositiveResult(isPositive(num))\r\n        setIsPerfectResult(isPerfect(num))\r\n        setIsPerfectSquareResult(isPerfectSquare(num))\r\n        setIsDivisorsResult(isDivisors(num))\r\n        setIsAbsoluteResult(isAbsolute(num))\r\n        setIsCompositeResult(isComposite(num))\r\n    }\r\n\r\n    const handleInputChange = (text) => {\r\n        if (/^-?\\d*$/.test(text)) {\r\n            setIsPrimeResult(null)\r\n            setIsEvenResult(null)\r\n            setIsPositiveResult(null)\r\n            setIsPerfectResult(null)\r\n            setIsPerfectSquareResult(null)\r\n            setIsDivisorsResult([])\r\n            setIsAbsoluteResult(null)\r\n            setIsCompositeResult(null)\r\n            setErrorMessage(null)\r\n            setNumber(text)\r\n        } else {\r\n            setErrorMessage('Por favor, insira apenas números inteiros.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.hav}>\r\n                <View style={styles.header}>\r\n                    <Text style={styles.title}>Número Analyzer</Text>\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.text}>Digite um número inteiro</Text>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.textInput}\r\n                                keyboardType='numeric'\r\n                                value={number}\r\n                                onChangeText={handleInputChange}\r\n                            />\r\n                        </View>\r\n                    <TouchableOpacity style={styles.button} onPress={checkNumber}>\r\n                        <Text style={styles.result}>Analisar</Text>\r\n                    </TouchableOpacity>\r\n                    {errorMessage && (\r\n                        <Text style={styles.error}>{errorMessage}</Text>\r\n                    )}\r\n                </View>\r\n                <View style={styles.main}>\r\n                    {isPrimeResult !== null && isPrimeResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPrimeResult ? `${number} é primo.` : `${number} não é primo.`}\r\n                        </Text>\r\n                    )}\r\n                    {isEvenResult !== null && isEvenResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isEvenResult ? `${number} é par.` : `${number} é impar.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPositiveResult !== null && isPositiveResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPositiveResult ? `${number} é positivo.` : `${number} é negativo.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPerfectResult !== null && isPerfectResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPerfectResult ? `${number} é um número perfeito.` : `${number} não é um número perfeito.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPerfectSquareResult !== null && isPerfectSquareResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPerfectSquareResult ? `${number} é um quadrado perfeito.` : `${number} não é um quadrado perfeito.`}\r\n                        </Text>\r\n                    )}\r\n                    {isDivisorsResult.length > 0 && (\r\n                        <Text style={styles.result}>\r\n                            {`Divisores de ${number}: ${isDivisorsResult.join(', ')}`}\r\n                        </Text>\r\n                    )}\r\n                    {isAbsoluteResult !== null && isAbsoluteResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {`O valor absoluto de ${number} é: ${isAbsoluteResult}`}\r\n                        </Text>\r\n                    )}\r\n                    {isCompositeResult !== null && isCompositeResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isCompositeResult ? `${number} é composto.` : `${number} não é composto.`}\r\n                        </Text>\r\n                    )}\r\n                </View>\r\n            </View>\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    navigation.navigate('Numbers Help')\r\n                }}\r\n                style={styles.helpButton}\r\n            >\r\n                <Text style={styles.textHelp}>\r\n                    Precisa de ajuda?\r\n                </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n    },\r\n    hav: {\r\n        flex: 1,\r\n    },\r\n    header: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 40,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    textHelp: {\r\n        fontSize: 18,\r\n    },\r\n    textInput: {\r\n        width: '80%',\r\n        height: 40,\r\n        borderWidth: 1,\r\n        borderRadius: 4,\r\n        alignSelf: 'center',\r\n        textAlign: 'center',\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    helpButton: {\r\n        backgroundColor: 'lightblue',\r\n        paddingVertical: 15,\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        width: '50%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'lightblue',\r\n        borderRadius: 5,\r\n        paddingVertical: 10,\r\n        alignSelf: 'center',\r\n        marginBottom: 60\r\n    },\r\n    result: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        marginVertical: 2,\r\n    },\r\n    error: {\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\n\r\nexport default NumbersCheck\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;EAE5B,IAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;EAEnC,IAAAC,SAAA,GAA4BZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA0CjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAwCrB,QAAQ,CAAC,IAAI,CAAC;IAAAsB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAgDzB,QAAQ,CAAC,IAAI,CAAC;IAAA0B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAvDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAA8C7B,QAAQ,CAAC,IAAI,CAAC;IAAA8B,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAArDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAC1C,IAAAG,WAAA,GAA0DjC,QAAQ,CAAC,IAAI,CAAC;IAAAkC,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAjEE,qBAAqB,GAAAD,WAAA;IAAEE,wBAAwB,GAAAF,WAAA;EACtD,IAAAG,WAAA,GAAgDrC,QAAQ,CAAC,EAAE,CAAC;IAAAsC,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAArDE,gBAAgB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAC5C,IAAAG,WAAA,GAAgDzC,QAAQ,CAAC,IAAI,CAAC;IAAA0C,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAAvDE,gBAAgB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAC5C,IAAAG,WAAA,GAAkD7C,QAAQ,CAAC,IAAI,CAAC;IAAA8C,WAAA,GAAAhC,cAAA,CAAA+B,WAAA;IAAzDE,iBAAiB,GAAAD,WAAA;IAAEE,oBAAoB,GAAAF,WAAA;EAC9C,IAAAG,WAAA,GAAwCjD,QAAQ,CAAC,IAAI,CAAC;IAAAkD,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAA/CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpC,IAAMG,OAAO,GAAG,SAAVA,OAAOA,CAAIC,GAAG,EAAK;IACrB,IAAIA,GAAG,IAAI,CAAC,EAAE,OAAO,KAAK;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAID,GAAG,GAAGC,CAAC,KAAK,CAAC,EAAE,OAAO,KAAK;IACnC;IACA,OAAO,IAAI;EACf,CAAC;EAED,IAAMG,MAAM,GAAG,SAATA,MAAMA,CAAIJ,GAAG,EAAK;IACpB,OAAOA,GAAG,GAAG,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAIL,GAAG,EAAK;IACxB,IAAIA,GAAG,GAAG,CAAC,EAAE;MACT,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,IAAMM,SAAS,GAAG,SAAZA,SAASA,CAAIN,GAAG,EAAK;IACvB,IAAIO,GAAG,GAAG,CAAC;IACX,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGA,CAAC,IAAID,GAAG,EAAEC,CAAC,EAAE,EAAE;MAC/B,IAAID,GAAG,GAAGC,CAAC,KAAK,CAAC,EAAE;QACfM,GAAG,IAAIN,CAAC;QACR,IAAIA,CAAC,GAAGA,CAAC,KAAKD,GAAG,EAAE;UACfO,GAAG,IAAIP,GAAG,GAAGC,CAAC;QAClB;MACJ;IACJ;IACA,OAAOM,GAAG,KAAKP,GAAG,IAAIA,GAAG,KAAK,CAAC;EACnC,CAAC;EAED,IAAMQ,eAAe,GAAG,SAAlBA,eAAeA,CAAIR,GAAG,EAAK;IAC7B,IAAMG,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IAC3B,OAAOG,IAAI,KAAKD,IAAI,CAACO,KAAK,CAACN,IAAI,CAAC;EACpC,CAAC;EAED,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIV,GAAG,EAAK;IACxB,IAAIA,GAAG,GAAG,CAAC,EAAE,OAAO,EAAE;IACtB,IAAMW,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAID,GAAG,GAAGC,CAAC,KAAK,CAAC,EAAE;QACfU,QAAQ,CAACC,IAAI,CAACX,CAAC,CAAC;QAChB,IAAIA,CAAC,KAAKD,GAAG,GAAGC,CAAC,EAAE;UACfU,QAAQ,CAACC,IAAI,CAACZ,GAAG,GAAGC,CAAC,CAAC;QAC1B;MACJ;IACJ;IACA,OAAOU,QAAQ,CAACE,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKD,CAAC,GAAGC,CAAC;IAAA,EAAC;EACzC,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIhB,GAAG,EAAK;IACxB,OAAOE,IAAI,CAACe,GAAG,CAACjB,GAAG,CAAC;EACxB,CAAC;EAED,IAAMkB,WAAW,GAAG,SAAdA,WAAWA,CAAIlB,GAAG,EAAK;IACzB,IAAIA,GAAG,IAAI,CAAC,EAAE,OAAO,KAAK;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAID,GAAG,GAAGC,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI;IAClC;IACA,OAAO,KAAK;EAChB,CAAC;EAED,IAAMkB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAI1D,MAAM,CAAC2D,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBrE,QAAQ,CAACsE,OAAO,CAAC,CAAC;MAClBvB,eAAe,CAAC,+CAA+C,CAAC;MAChE;IACJ;IACA/C,QAAQ,CAACsE,OAAO,CAAC,CAAC;IAClB,IAAMrB,GAAG,GAAGsB,QAAQ,CAAC7D,MAAM,CAAC;IAC5BK,gBAAgB,CAACiC,OAAO,CAACC,GAAG,CAAC,CAAC;IAC9B9B,eAAe,CAACkC,MAAM,CAACJ,GAAG,CAAC,CAAC;IAC5B1B,mBAAmB,CAAC+B,UAAU,CAACL,GAAG,CAAC,CAAC;IACpCtB,kBAAkB,CAAC4B,SAAS,CAACN,GAAG,CAAC,CAAC;IAClClB,wBAAwB,CAAC0B,eAAe,CAACR,GAAG,CAAC,CAAC;IAC9Cd,mBAAmB,CAACwB,UAAU,CAACV,GAAG,CAAC,CAAC;IACpCV,mBAAmB,CAAC0B,UAAU,CAAChB,GAAG,CAAC,CAAC;IACpCN,oBAAoB,CAACwB,WAAW,CAAClB,GAAG,CAAC,CAAC;EAC1C,CAAC;EAED,IAAMuB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;IAChC,IAAI,SAAS,CAACC,IAAI,CAACD,IAAI,CAAC,EAAE;MACtB1D,gBAAgB,CAAC,IAAI,CAAC;MACtBI,eAAe,CAAC,IAAI,CAAC;MACrBI,mBAAmB,CAAC,IAAI,CAAC;MACzBI,kBAAkB,CAAC,IAAI,CAAC;MACxBI,wBAAwB,CAAC,IAAI,CAAC;MAC9BI,mBAAmB,CAAC,EAAE,CAAC;MACvBI,mBAAmB,CAAC,IAAI,CAAC;MACzBI,oBAAoB,CAAC,IAAI,CAAC;MAC1BI,eAAe,CAAC,IAAI,CAAC;MACrBpC,SAAS,CAAC8D,IAAI,CAAC;IACnB,CAAC,MAAM;MACH1B,eAAe,CAAC,4CAA4C,CAAC;IACjE;EACJ,CAAC;EAED,OACI5C,OAAA,CAACP,IAAI;IAAC+E,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1B3E,OAAA,CAACP,IAAI;MAAC+E,KAAK,EAAEC,MAAM,CAACG,GAAI;MAAAD,QAAA,GACpB3E,OAAA,CAACP,IAAI;QAAC+E,KAAK,EAAEC,MAAM,CAACI,MAAO;QAAAF,QAAA,EACvB3E,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACK,KAAM;UAAAH,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAC/C,CAAC,EACPnF,OAAA,CAACP,IAAI;QAAC+E,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAC,QAAA,GAC1B3E,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACH,IAAK;UAAAK,QAAA,EAAC;QAAwB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EACrDnF,OAAA,CAACP,IAAI;UAAAkF,QAAA,EACD3E,OAAA,CAACJ,SAAS;YACN4E,KAAK,EAAEC,MAAM,CAACW,SAAU;YACxBC,YAAY,EAAC,SAAS;YACtBC,KAAK,EAAE/E,MAAO;YACdgF,YAAY,EAAElB;UAAkB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACnC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACA,CAAC,EACXnF,OAAA,CAACN,gBAAgB;UAAC8E,KAAK,EAAEC,MAAM,CAACe,MAAO;UAACC,OAAO,EAAExB,WAAY;UAAAU,QAAA,EACzD3E,OAAA,CAACL,IAAI;YAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;YAAAf,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC7B,CAAC,EAClBxC,YAAY,IACT3C,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACkB,KAAM;UAAAhB,QAAA,EAAEhC;QAAY;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAO,CAClD;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACC,CAAC,EACPnF,OAAA,CAACP,IAAI;QAAC+E,KAAK,EAAEC,MAAM,CAACmB,IAAK;QAAAjB,QAAA,GACpBhE,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAKkF,SAAS,IAClD7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtBhE,aAAa,GAAG,GAAGJ,MAAM,WAAW,GAAG,GAAGA,MAAM;QAAe;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC9D,CACT,EACApE,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK8E,SAAS,IAChD7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtB5D,YAAY,GAAG,GAAGR,MAAM,SAAS,GAAG,GAAGA,MAAM;QAAW;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACvD,CACT,EACAhE,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK0E,SAAS,IACxD7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtBxD,gBAAgB,GAAG,GAAGZ,MAAM,cAAc,GAAG,GAAGA,MAAM;QAAc;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACnE,CACT,EACA5D,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAKsE,SAAS,IACtD7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtBpD,eAAe,GAAG,GAAGhB,MAAM,wBAAwB,GAAG,GAAGA,MAAM;QAA4B;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAC1F,CACT,EACAxD,qBAAqB,KAAK,IAAI,IAAIA,qBAAqB,KAAKkE,SAAS,IAClE7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtBhD,qBAAqB,GAAG,GAAGpB,MAAM,0BAA0B,GAAG,GAAGA,MAAM;QAA8B;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACpG,CACT,EACApD,gBAAgB,CAAC+D,MAAM,GAAG,CAAC,IACxB9F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtB,gBAAgBpE,MAAM,KAAKwB,gBAAgB,CAACgE,IAAI,CAAC,IAAI,CAAC;QAAE;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACvD,CACT,EACAhD,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK0D,SAAS,IACxD7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtB,uBAAuBpE,MAAM,OAAO4B,gBAAgB;QAAE;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrD,CACT,EACA5C,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAKsD,SAAS,IAC1D7F,OAAA,CAACL,IAAI;UAAC6E,KAAK,EAAEC,MAAM,CAACiB,MAAO;UAAAf,QAAA,EACtBpC,iBAAiB,GAAG,GAAGhC,MAAM,cAAc,GAAG,GAAGA,MAAM;QAAkB;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACxE,CACT;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACC,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACL,CAAC,EACPnF,OAAA,CAACN,gBAAgB;MACb+F,OAAO,EAAE,SAAAA,QAAA,EAAM;QACXtF,UAAU,CAAC6F,QAAQ,CAAC,cAAc,CAAC;MACvC,CAAE;MACFxB,KAAK,EAAEC,MAAM,CAACwB,UAAW;MAAAtB,QAAA,EAEzB3E,OAAA,CAACL,IAAI;QAAC6E,KAAK,EAAEC,MAAM,CAACyB,QAAS;QAAAvB,QAAA,EAAC;MAE9B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACO,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACjB,CAAC;AAEf,CAAC;AAED,IAAMV,MAAM,GAAG3E,UAAU,CAACqG,MAAM,CAAC;EAC7BzB,SAAS,EAAE;IACP0B,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EACpB,CAAC;EACDzB,GAAG,EAAE;IACDwB,IAAI,EAAE;EACV,CAAC;EACDvB,MAAM,EAAE;IACJwB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDzB,KAAK,EAAE;IACH0B,QAAQ,EAAE;EACd,CAAC;EACDlC,IAAI,EAAE;IACFkC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACf,CAAC;EACDP,QAAQ,EAAE;IACNM,QAAQ,EAAE;EACd,CAAC;EACDpB,SAAS,EAAE;IACPsB,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,QAAQ;IACnBL,SAAS,EAAE;EACf,CAAC;EACDb,IAAI,EAAE;IACFQ,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE;EAChB,CAAC;EACDL,UAAU,EAAE;IACRc,eAAe,EAAE,WAAW;IAC5BC,eAAe,EAAE,EAAE;IACnBV,UAAU,EAAE;EAChB,CAAC;EACDd,MAAM,EAAE;IACJkB,KAAK,EAAE,KAAK;IACZJ,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBU,eAAe,EAAE,WAAW;IAC5BF,YAAY,EAAE,CAAC;IACfG,eAAe,EAAE,EAAE;IACnBF,SAAS,EAAE,QAAQ;IACnBG,YAAY,EAAE;EAClB,CAAC;EACDvB,MAAM,EAAE;IACJe,SAAS,EAAE,QAAQ;IACnBS,UAAU,EAAE,MAAM;IAClBV,QAAQ,EAAE,EAAE;IACZD,cAAc,EAAE;EACpB,CAAC;EACDZ,KAAK,EAAE;IACHc,SAAS,EAAE,QAAQ;IACnBD,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AAGF,eAAevG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}