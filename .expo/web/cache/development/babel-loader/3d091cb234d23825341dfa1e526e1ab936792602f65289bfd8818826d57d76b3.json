{"ast":null,"code":"import UIManager from '../../exports/UIManager';\nimport useStable from '../useStable';\nexport default function usePlatformMethods({\n  pointerEvents,\n  style\n}) {\n  const ref = useStable(() => hostNode => {\n    if (hostNode != null) {\n      hostNode.measure = callback => UIManager.measure(hostNode, callback);\n      hostNode.measureLayout = (relativeToNode, success, failure) => UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n      hostNode.measureInWindow = callback => UIManager.measureInWindow(hostNode, callback);\n    }\n  });\n  return ref;\n}","map":{"version":3,"names":["UIManager","useStable","usePlatformMethods","pointerEvents","style","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/modules/usePlatformMethods/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { GenericStyleProp } from '../../types';\nimport type { ViewProps } from '../../exports/View';\n\nimport UIManager from '../../exports/UIManager';\nimport useStable from '../useStable';\n\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\nexport default function usePlatformMethods({\n  pointerEvents,\n  style\n}: {\n  style?: GenericStyleProp<*>,\n  pointerEvents?: $PropertyType<ViewProps, 'pointerEvents'>\n}): (hostNode: any) => void {\n  // Avoid creating a new ref on every render.\n  const ref = useStable(() => (hostNode: any) => {\n    if (hostNode != null) {\n      hostNode.measure = (callback) => UIManager.measure(hostNode, callback);\n      hostNode.measureLayout = (relativeToNode, success, failure) =>\n        UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n      hostNode.measureInWindow = (callback) =>\n        UIManager.measureInWindow(hostNode, callback);\n    }\n  });\n\n  return ref;\n}\n"],"mappings":"AAYA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,cAAc;AAMpC,eAAe,SAASC,kBAAkBA,CAAC;EACzCC,aAAa;EACbC;AAIF,CAAC,EAA2B;EAE1B,MAAMC,GAAG,GAAGJ,SAAS,CAAC,MAAOK,QAAa,IAAK;IAC7C,IAAIA,QAAQ,IAAI,IAAI,EAAE;MACpBA,QAAQ,CAACC,OAAO,GAAIC,QAAQ,IAAKR,SAAS,CAACO,OAAO,CAACD,QAAQ,EAAEE,QAAQ,CAAC;MACtEF,QAAQ,CAACG,aAAa,GAAG,CAACC,cAAc,EAAEC,OAAO,EAAEC,OAAO,KACxDZ,SAAS,CAACS,aAAa,CAACH,QAAQ,EAAEI,cAAc,EAAEE,OAAO,EAAED,OAAO,CAAC;MACrEL,QAAQ,CAACO,eAAe,GAAIL,QAAQ,IAClCR,SAAS,CAACa,eAAe,CAACP,QAAQ,EAAEE,QAAQ,CAAC;IACjD;EACF,CAAC,CAAC;EAEF,OAAOH,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}