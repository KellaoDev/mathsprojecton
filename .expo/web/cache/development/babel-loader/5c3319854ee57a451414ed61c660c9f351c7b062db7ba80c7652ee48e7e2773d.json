{"ast":null,"code":"const warnedKeys = {};\nexport function warnOnce(key, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (warnedKeys[key]) {\n      return;\n    }\n    console.warn(message);\n    warnedKeys[key] = true;\n  }\n}","map":{"version":3,"names":["warnedKeys","warnOnce","key","message","process","env","NODE_ENV","console","warn"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/modules/warnOnce/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nconst warnedKeys: { [string]: boolean, ... } = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nexport function warnOnce(key: string, message: string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (warnedKeys[key]) {\n      return;\n    }\n\n    console.warn(message);\n\n    warnedKeys[key] = true;\n  }\n}\n"],"mappings":"AASA,MAAMA,UAAsC,GAAG,CAAC,CAAC;AASjD,OAAO,SAASC,QAAQA,CAACC,GAAW,EAAEC,OAAe,EAAE;EACrD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIN,UAAU,CAACE,GAAG,CAAC,EAAE;MACnB;IACF;IAEAK,OAAO,CAACC,IAAI,CAACL,OAAO,CAAC;IAErBH,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}