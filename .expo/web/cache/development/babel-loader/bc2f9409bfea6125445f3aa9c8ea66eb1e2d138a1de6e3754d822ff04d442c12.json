{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kellao\\\\Desktop\\\\mathsprojecton-main\\\\screens\\\\mathematicsDiscrete\\\\NumbersCheck.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumbersCheck = props => {\n  const navigation = props.navigation;\n  const [number, setNumber] = useState('');\n  const [isPrimeResult, setIsPrimeResult] = useState(null);\n  const [isEvenResult, setIsEvenResult] = useState(null);\n  const [isPositiveResult, setIsPositiveResult] = useState(null);\n  const [isPerfectResult, setIsPerfectResult] = useState(null);\n  const [isPerfectSquareResult, setIsPerfectSquareResult] = useState(null);\n  const [isDivisorsResult, setIsDivisorsResult] = useState([]);\n  const [isAbsoluteResult, setIsAbsoluteResult] = useState(null);\n  const [isCompositeResult, setIsCompositeResult] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const isPrime = num => {\n    if (num <= 1) return false;\n    for (let i = 2; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) return false;\n    }\n    return true;\n  };\n  const isEven = num => {\n    return num % 2 === 0;\n  };\n  const isPositive = num => {\n    if (num > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const isPerfect = num => {\n    let sum = 1;\n    for (let i = 2; i * i <= num; i++) {\n      if (num % i === 0) {\n        sum += i;\n        if (i * i !== num) {\n          sum += num / i;\n        }\n      }\n    }\n    return sum === num && num !== 1;\n  };\n  const isPerfectSquare = num => {\n    const sqrt = Math.sqrt(num);\n    return sqrt === Math.floor(sqrt);\n  };\n  const isDivisors = num => {\n    if (num < 1) return [];\n    const divisors = [];\n    for (let i = 1; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) {\n        divisors.push(i);\n        if (i !== num / i) {\n          divisors.push(num / i);\n        }\n      }\n    }\n    return divisors.sort((a, b) => a - b);\n  };\n  const isAbsolute = num => {\n    return Math.abs(num);\n  };\n  const isComposite = num => {\n    if (num <= 1) return false;\n    for (let i = 2; i <= Math.sqrt(num); i++) {\n      if (num % i === 0) return true;\n    }\n    return false;\n  };\n  const checkNumber = () => {\n    if (number.trim() === '') {\n      Keyboard.dismiss();\n      setErrorMessage('Por favor, insira um valor antes de analisar.');\n      return;\n    }\n    Keyboard.dismiss();\n    const num = parseInt(number);\n    setIsPrimeResult(isPrime(num));\n    setIsEvenResult(isEven(num));\n    setIsPositiveResult(isPositive(num));\n    setIsPerfectResult(isPerfect(num));\n    setIsPerfectSquareResult(isPerfectSquare(num));\n    setIsDivisorsResult(isDivisors(num));\n    setIsAbsoluteResult(isAbsolute(num));\n    setIsCompositeResult(isComposite(num));\n  };\n  const handleInputChange = text => {\n    if (/^-?\\d*$/.test(text)) {\n      setIsPrimeResult(null);\n      setIsEvenResult(null);\n      setIsPositiveResult(null);\n      setIsPerfectResult(null);\n      setIsPerfectSquareResult(null);\n      setIsDivisorsResult([]);\n      setIsAbsoluteResult(null);\n      setIsCompositeResult(null);\n      setErrorMessage(null);\n      setNumber(text);\n    } else {\n      setErrorMessage('Por favor, insira apenas números inteiros.');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.hav,\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: _jsxDEV(Text, {\n          style: styles.title,\n          children: \"N\\xFAmero Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(Text, {\n          style: styles.text,\n          children: \"Digite um n\\xFAmero inteiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), _jsxDEV(View, {\n          children: _jsxDEV(TextInput, {\n            style: styles.textInput,\n            keyboardType: \"numeric\",\n            value: number,\n            onChangeText: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: checkNumber,\n          children: _jsxDEV(Text, {\n            style: styles.result,\n            children: \"Analisar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), errorMessage && _jsxDEV(Text, {\n          style: styles.error,\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.main,\n        children: [isPrimeResult !== null && isPrimeResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPrimeResult ? `${number} é primo.` : `${number} não é primo.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), isEvenResult !== null && isEvenResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isEvenResult ? `${number} é par.` : `${number} é impar.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), isPositiveResult !== null && isPositiveResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPositiveResult ? `${number} é positivo.` : `${number} é negativo.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), isPerfectResult !== null && isPerfectResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPerfectResult ? `${number} é um número perfeito.` : `${number} não é um número perfeito.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), isPerfectSquareResult !== null && isPerfectSquareResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isPerfectSquareResult ? `${number} é um quadrado perfeito.` : `${number} não é um quadrado perfeito.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), isDivisorsResult.length > 0 && _jsxDEV(Text, {\n          style: styles.result,\n          children: `Divisores de ${number}: ${isDivisorsResult.join(', ')}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), isAbsoluteResult !== null && isAbsoluteResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: `O valor absoluto de ${number} é: ${isAbsoluteResult}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), isCompositeResult !== null && isCompositeResult !== undefined && _jsxDEV(Text, {\n          style: styles.result,\n          children: isCompositeResult ? `${number} é composto.` : `${number} não é composto.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: () => {\n        navigation.navigate('Numbers Help');\n      },\n      style: styles.helpButton,\n      children: _jsxDEV(Text, {\n        style: styles.textHelp,\n        children: \"Precisa de ajuda?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between'\n  },\n  hav: {\n    flex: 1\n  },\n  header: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 40\n  },\n  title: {\n    fontSize: 24\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  textHelp: {\n    fontSize: 18\n  },\n  textInput: {\n    width: '80%',\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4,\n    alignSelf: 'center',\n    textAlign: 'center'\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  helpButton: {\n    backgroundColor: 'lightblue',\n    paddingVertical: 15,\n    alignItems: 'center'\n  },\n  button: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'lightblue',\n    borderRadius: 5,\n    paddingVertical: 10,\n    alignSelf: 'center',\n    marginBottom: 60\n  },\n  result: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20,\n    marginVertical: 2\n  },\n  error: {\n    textAlign: 'center',\n    fontSize: 18\n  }\n});\nexport default NumbersCheck;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","TextInput","TouchableWithoutFeedback","Keyboard","StyleSheet","jsxDEV","_jsxDEV","NumbersCheck","props","navigation","number","setNumber","isPrimeResult","setIsPrimeResult","isEvenResult","setIsEvenResult","isPositiveResult","setIsPositiveResult","isPerfectResult","setIsPerfectResult","isPerfectSquareResult","setIsPerfectSquareResult","isDivisorsResult","setIsDivisorsResult","isAbsoluteResult","setIsAbsoluteResult","isCompositeResult","setIsCompositeResult","errorMessage","setErrorMessage","isPrime","num","i","Math","sqrt","isEven","isPositive","isPerfect","sum","isPerfectSquare","floor","isDivisors","divisors","push","sort","a","b","isAbsolute","abs","isComposite","checkNumber","trim","dismiss","parseInt","handleInputChange","text","test","style","styles","container","children","hav","header","title","fileName","_jsxFileName","lineNumber","columnNumber","textInput","keyboardType","value","onChangeText","button","onPress","result","error","main","undefined","length","join","navigate","helpButton","textHelp","create","flex","justifyContent","alignItems","marginVertical","fontSize","textAlign","width","height","borderWidth","borderRadius","alignSelf","backgroundColor","paddingVertical","marginBottom","fontWeight"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/screens/mathematicsDiscrete/NumbersCheck.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, TextInput, TouchableWithoutFeedback, Keyboard, StyleSheet } from 'react-native';\r\n\r\nconst NumbersCheck = (props) => {\r\n\r\n    const navigation = props.navigation\r\n\r\n    const [number, setNumber] = useState('')\r\n    const [isPrimeResult, setIsPrimeResult] = useState(null)\r\n    const [isEvenResult, setIsEvenResult] = useState(null)\r\n    const [isPositiveResult, setIsPositiveResult] = useState(null)\r\n    const [isPerfectResult, setIsPerfectResult] = useState(null)\r\n    const [isPerfectSquareResult, setIsPerfectSquareResult] = useState(null)\r\n    const [isDivisorsResult, setIsDivisorsResult] = useState([])\r\n    const [isAbsoluteResult, setIsAbsoluteResult] = useState(null)\r\n    const [isCompositeResult, setIsCompositeResult] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const isPrime = (num) => {\r\n        if (num <= 1) return false\r\n        for (let i = 2; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const isEven = (num) => {\r\n        return num % 2 === 0\r\n    }\r\n\r\n    const isPositive = (num) => {\r\n        if (num > 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const isPerfect = (num) => {\r\n        let sum = 1\r\n        for (let i = 2; i * i <= num; i++) {\r\n            if (num % i === 0) {\r\n                sum += i\r\n                if (i * i !== num) {\r\n                    sum += num / i\r\n                }\r\n            }\r\n        }\r\n        return sum === num && num !== 1\r\n    }\r\n\r\n    const isPerfectSquare = (num) => {\r\n        const sqrt = Math.sqrt(num)\r\n        return sqrt === Math.floor(sqrt)\r\n    }\r\n\r\n    const isDivisors = (num) => {\r\n        if (num < 1) return []\r\n        const divisors = []\r\n        for (let i = 1; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) {\r\n                divisors.push(i)\r\n                if (i !== num / i) {\r\n                    divisors.push(num / i)\r\n                }\r\n            }\r\n        }\r\n        return divisors.sort((a, b) => a - b)\r\n    }\r\n\r\n    const isAbsolute = (num) => {\r\n        return Math.abs(num)\r\n    }\r\n\r\n    const isComposite = (num) => {\r\n        if (num <= 1) return false\r\n        for (let i = 2; i <= Math.sqrt(num); i++) {\r\n            if (num % i === 0) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkNumber = () => {\r\n        if (number.trim() === '') {\r\n            Keyboard.dismiss()\r\n            setErrorMessage('Por favor, insira um valor antes de analisar.')\r\n            return\r\n        }\r\n        Keyboard.dismiss()\r\n        const num = parseInt(number)\r\n        setIsPrimeResult(isPrime(num))\r\n        setIsEvenResult(isEven(num))\r\n        setIsPositiveResult(isPositive(num))\r\n        setIsPerfectResult(isPerfect(num))\r\n        setIsPerfectSquareResult(isPerfectSquare(num))\r\n        setIsDivisorsResult(isDivisors(num))\r\n        setIsAbsoluteResult(isAbsolute(num))\r\n        setIsCompositeResult(isComposite(num))\r\n    }\r\n\r\n    const handleInputChange = (text) => {\r\n        if (/^-?\\d*$/.test(text)) {\r\n            setIsPrimeResult(null)\r\n            setIsEvenResult(null)\r\n            setIsPositiveResult(null)\r\n            setIsPerfectResult(null)\r\n            setIsPerfectSquareResult(null)\r\n            setIsDivisorsResult([])\r\n            setIsAbsoluteResult(null)\r\n            setIsCompositeResult(null)\r\n            setErrorMessage(null)\r\n            setNumber(text)\r\n        } else {\r\n            setErrorMessage('Por favor, insira apenas números inteiros.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.hav}>\r\n                <View style={styles.header}>\r\n                    <Text style={styles.title}>Número Analyzer</Text>\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.text}>Digite um número inteiro</Text>\r\n                        <View>\r\n                            <TextInput\r\n                                style={styles.textInput}\r\n                                keyboardType='numeric'\r\n                                value={number}\r\n                                onChangeText={handleInputChange}\r\n                            />\r\n                        </View>\r\n                    <TouchableOpacity style={styles.button} onPress={checkNumber}>\r\n                        <Text style={styles.result}>Analisar</Text>\r\n                    </TouchableOpacity>\r\n                    {errorMessage && (\r\n                        <Text style={styles.error}>{errorMessage}</Text>\r\n                    )}\r\n                </View>\r\n                <View style={styles.main}>\r\n                    {isPrimeResult !== null && isPrimeResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPrimeResult ? `${number} é primo.` : `${number} não é primo.`}\r\n                        </Text>\r\n                    )}\r\n                    {isEvenResult !== null && isEvenResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isEvenResult ? `${number} é par.` : `${number} é impar.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPositiveResult !== null && isPositiveResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPositiveResult ? `${number} é positivo.` : `${number} é negativo.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPerfectResult !== null && isPerfectResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPerfectResult ? `${number} é um número perfeito.` : `${number} não é um número perfeito.`}\r\n                        </Text>\r\n                    )}\r\n                    {isPerfectSquareResult !== null && isPerfectSquareResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isPerfectSquareResult ? `${number} é um quadrado perfeito.` : `${number} não é um quadrado perfeito.`}\r\n                        </Text>\r\n                    )}\r\n                    {isDivisorsResult.length > 0 && (\r\n                        <Text style={styles.result}>\r\n                            {`Divisores de ${number}: ${isDivisorsResult.join(', ')}`}\r\n                        </Text>\r\n                    )}\r\n                    {isAbsoluteResult !== null && isAbsoluteResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {`O valor absoluto de ${number} é: ${isAbsoluteResult}`}\r\n                        </Text>\r\n                    )}\r\n                    {isCompositeResult !== null && isCompositeResult !== undefined && (\r\n                        <Text style={styles.result}>\r\n                            {isCompositeResult ? `${number} é composto.` : `${number} não é composto.`}\r\n                        </Text>\r\n                    )}\r\n                </View>\r\n            </View>\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    navigation.navigate('Numbers Help')\r\n                }}\r\n                style={styles.helpButton}\r\n            >\r\n                <Text style={styles.textHelp}>\r\n                    Precisa de ajuda?\r\n                </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'space-between',\r\n    },\r\n    hav: {\r\n        flex: 1,\r\n    },\r\n    header: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 40,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    textHelp: {\r\n        fontSize: 18,\r\n    },\r\n    textInput: {\r\n        width: '80%',\r\n        height: 40,\r\n        borderWidth: 1,\r\n        borderRadius: 4,\r\n        alignSelf: 'center',\r\n        textAlign: 'center',\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    helpButton: {\r\n        backgroundColor: 'lightblue',\r\n        paddingVertical: 15,\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        width: '50%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'lightblue',\r\n        borderRadius: 5,\r\n        paddingVertical: 10,\r\n        alignSelf: 'center',\r\n        marginBottom: 60\r\n    },\r\n    result: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        marginVertical: 2,\r\n    },\r\n    error: {\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\n\r\nexport default NumbersCheck\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}