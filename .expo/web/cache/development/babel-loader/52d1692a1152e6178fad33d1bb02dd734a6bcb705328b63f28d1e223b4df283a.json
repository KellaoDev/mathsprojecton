{"ast":null,"code":"import normalizeValueWithProperty from './normalizeValueWithProperty';\nimport canUseDOM from '../../../modules/canUseDom';\nconst emptyObject = {};\nconst supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\nconst MONOSPACE_FONT_STACK = 'monospace,monospace';\nconst SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\nconst STYLE_SHORT_FORM_EXPANSIONS = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderBlockColor: ['borderTopColor', 'borderBottomColor'],\n  borderInlineColor: ['borderRightColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderBlockStyle: ['borderTopStyle', 'borderBottomStyle'],\n  borderInlineStyle: ['borderRightStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  borderBlockWidth: ['borderTopWidth', 'borderBottomWidth'],\n  borderInlineWidth: ['borderRightWidth', 'borderLeftWidth'],\n  insetBlock: ['top', 'bottom'],\n  insetInline: ['left', 'right'],\n  marginBlock: ['marginTop', 'marginBottom'],\n  marginInline: ['marginRight', 'marginLeft'],\n  paddingBlock: ['paddingTop', 'paddingBottom'],\n  paddingInline: ['paddingRight', 'paddingLeft'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  borderBlockStartColor: ['borderTopColor'],\n  borderBlockStartStyle: ['borderTopStyle'],\n  borderBlockStartWidth: ['borderTopWidth'],\n  borderBlockEndColor: ['borderBottomColor'],\n  borderBlockEndStyle: ['borderBottomStyle'],\n  borderBlockEndWidth: ['borderBottomWidth'],\n  borderEndStartRadius: ['borderBottomLeftRadius'],\n  borderEndEndRadius: ['borderBottomRightRadius'],\n  borderStartStartRadius: ['borderTopLeftRadius'],\n  borderStartEndRadius: ['borderTopRightRadius'],\n  insetBlockEnd: ['bottom'],\n  insetBlockStart: ['top'],\n  marginBlockStart: ['marginTop'],\n  marginBlockEnd: ['marginBottom'],\n  paddingBlockStart: ['paddingTop'],\n  paddingBlockEnd: ['paddingBottom']\n};\nconst createReactDOMStyle = (style, isInline) => {\n  if (!style) {\n    return emptyObject;\n  }\n  const resolvedStyle = {};\n  for (const prop in style) {\n    const value = style[prop];\n    if (value == null) {\n      continue;\n    }\n    if (prop === 'backgroundClip') {\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        const stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'textDecorationLine') {\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      const value = normalizeValueWithProperty(style[prop], prop);\n      const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n      if (isInline && prop === 'inset') {\n        if (style.insetInline == null) {\n          resolvedStyle.left = value;\n          resolvedStyle.right = value;\n        }\n        if (style.insetBlock == null) {\n          resolvedStyle.top = value;\n          resolvedStyle.bottom = value;\n        }\n      } else if (isInline && prop === 'margin') {\n        if (style.marginInline == null) {\n          resolvedStyle.marginLeft = value;\n          resolvedStyle.marginRight = value;\n        }\n        if (style.marginBlock == null) {\n          resolvedStyle.marginTop = value;\n          resolvedStyle.marginBottom = value;\n        }\n      } else if (isInline && prop === 'padding') {\n        if (style.paddingInline == null) {\n          resolvedStyle.paddingLeft = value;\n          resolvedStyle.paddingRight = value;\n        }\n        if (style.paddingBlock == null) {\n          resolvedStyle.paddingTop = value;\n          resolvedStyle.paddingBottom = value;\n        }\n      } else if (longFormProperties) {\n        longFormProperties.forEach((longForm, i) => {\n          if (style[longForm] == null) {\n            resolvedStyle[longForm] = value;\n          }\n        });\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    }\n  }\n  return resolvedStyle;\n};\nexport default createReactDOMStyle;","map":{"version":3,"names":["normalizeValueWithProperty","canUseDOM","emptyObject","supportsCSS3TextDecoration","window","CSS","supports","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","borderColor","borderBlockColor","borderInlineColor","borderRadius","borderStyle","borderBlockStyle","borderInlineStyle","borderWidth","borderBlockWidth","borderInlineWidth","insetBlock","insetInline","marginBlock","marginInline","paddingBlock","paddingInline","overflow","overscrollBehavior","borderBlockStartColor","borderBlockStartStyle","borderBlockStartWidth","borderBlockEndColor","borderBlockEndStyle","borderBlockEndWidth","borderEndStartRadius","borderEndEndRadius","borderStartStartRadius","borderStartEndRadius","insetBlockEnd","insetBlockStart","marginBlockStart","marginBlockEnd","paddingBlockStart","paddingBlockEnd","createReactDOMStyle","style","isInline","resolvedStyle","prop","value","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","flex","replace","indexOf","stack","split","join","textDecoration","textDecorationLine","direction","longFormProperties","left","right","top","bottom","marginLeft","marginRight","marginTop","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","forEach","longForm","i"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/exports/StyleSheet/compiler/createReactDOMStyle.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport canUseDOM from '../../../modules/canUseDom';\n\ntype Style = { [key: string]: any };\n\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nconst emptyObject = {};\n\nconst supportsCSS3TextDecoration =\n  !canUseDOM ||\n  (window.CSS != null &&\n    window.CSS.supports != null &&\n    (window.CSS.supports('text-decoration-line', 'none') ||\n      window.CSS.supports('-webkit-text-decoration-line', 'none')));\n\nconst MONOSPACE_FONT_STACK = 'monospace,monospace';\n\nconst SYSTEM_FONT_STACK =\n  '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n\nconst STYLE_SHORT_FORM_EXPANSIONS = {\n  borderColor: [\n    'borderTopColor',\n    'borderRightColor',\n    'borderBottomColor',\n    'borderLeftColor'\n  ],\n  borderBlockColor: ['borderTopColor', 'borderBottomColor'],\n  borderInlineColor: ['borderRightColor', 'borderLeftColor'],\n  borderRadius: [\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomRightRadius',\n    'borderBottomLeftRadius'\n  ],\n  borderStyle: [\n    'borderTopStyle',\n    'borderRightStyle',\n    'borderBottomStyle',\n    'borderLeftStyle'\n  ],\n  borderBlockStyle: ['borderTopStyle', 'borderBottomStyle'],\n  borderInlineStyle: ['borderRightStyle', 'borderLeftStyle'],\n  borderWidth: [\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth'\n  ],\n  borderBlockWidth: ['borderTopWidth', 'borderBottomWidth'],\n  borderInlineWidth: ['borderRightWidth', 'borderLeftWidth'],\n  insetBlock: ['top', 'bottom'],\n  insetInline: ['left', 'right'],\n  marginBlock: ['marginTop', 'marginBottom'],\n  marginInline: ['marginRight', 'marginLeft'],\n  paddingBlock: ['paddingTop', 'paddingBottom'],\n  paddingInline: ['paddingRight', 'paddingLeft'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  borderBlockStartColor: ['borderTopColor'],\n  borderBlockStartStyle: ['borderTopStyle'],\n  borderBlockStartWidth: ['borderTopWidth'],\n  borderBlockEndColor: ['borderBottomColor'],\n  borderBlockEndStyle: ['borderBottomStyle'],\n  borderBlockEndWidth: ['borderBottomWidth'],\n  //borderInlineStartColor: ['borderLeftColor'],\n  //borderInlineStartStyle: ['borderLeftStyle'],\n  //borderInlineStartWidth: ['borderLeftWidth'],\n  //borderInlineEndColor: ['borderRightColor'],\n  //borderInlineEndStyle: ['borderRightStyle'],\n  //borderInlineEndWidth: ['borderRightWidth'],\n  borderEndStartRadius: ['borderBottomLeftRadius'],\n  borderEndEndRadius: ['borderBottomRightRadius'],\n  borderStartStartRadius: ['borderTopLeftRadius'],\n  borderStartEndRadius: ['borderTopRightRadius'],\n  insetBlockEnd: ['bottom'],\n  insetBlockStart: ['top'],\n  //insetInlineEnd: ['right'],\n  //insetInlineStart: ['left'],\n  marginBlockStart: ['marginTop'],\n  marginBlockEnd: ['marginBottom'],\n  //marginInlineStart: ['marginLeft'],\n  //marginInlineEnd: ['marginRight'],\n  paddingBlockStart: ['paddingTop'],\n  paddingBlockEnd: ['paddingBottom']\n  //paddingInlineStart: ['marginLeft'],\n  //paddingInlineEnd: ['marginRight'],\n};\n\n/**\n * Reducer\n */\n\nconst createReactDOMStyle = (style: Style, isInline?: boolean): Style => {\n  if (!style) {\n    return emptyObject;\n  }\n\n  const resolvedStyle = {};\n\n  for (const prop in style) {\n    const value = style[prop];\n\n    if (\n      // Ignore everything with a null value\n      value == null\n    ) {\n      continue;\n    }\n\n    if (prop === 'backgroundClip') {\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        const stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'textDecorationLine') {\n      // use 'text-decoration' for browsers that only support CSS2\n      // text-decoration (e.g., IE, Edge)\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      const value = normalizeValueWithProperty(style[prop], prop);\n      const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n      if (isInline && prop === 'inset') {\n        if (style.insetInline == null) {\n          resolvedStyle.left = value;\n          resolvedStyle.right = value;\n        }\n        if (style.insetBlock == null) {\n          resolvedStyle.top = value;\n          resolvedStyle.bottom = value;\n        }\n      } else if (isInline && prop === 'margin') {\n        if (style.marginInline == null) {\n          resolvedStyle.marginLeft = value;\n          resolvedStyle.marginRight = value;\n        }\n        if (style.marginBlock == null) {\n          resolvedStyle.marginTop = value;\n          resolvedStyle.marginBottom = value;\n        }\n      } else if (isInline && prop === 'padding') {\n        if (style.paddingInline == null) {\n          resolvedStyle.paddingLeft = value;\n          resolvedStyle.paddingRight = value;\n        }\n        if (style.paddingBlock == null) {\n          resolvedStyle.paddingTop = value;\n          resolvedStyle.paddingBottom = value;\n        }\n      } else if (longFormProperties) {\n        longFormProperties.forEach((longForm, i) => {\n          // The value of any longform property in the original styles takes\n          // precedence over the shortform's value.\n          if (style[longForm] == null) {\n            resolvedStyle[longForm] = value;\n          }\n        });\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}