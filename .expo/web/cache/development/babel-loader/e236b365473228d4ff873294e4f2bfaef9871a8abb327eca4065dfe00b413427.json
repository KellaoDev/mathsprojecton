{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"animationKeyframes\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport createReactDOMStyle from './createReactDOMStyle';\nimport hash from './hash';\nimport hyphenateStyleName from './hyphenateStyleName';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport prefixStyles from '../../../modules/prefixStyles';\nconst cache = new Map();\nconst emptyObject = {};\nconst classicGroup = 1;\nconst atomicGroup = 3;\nconst customGroup = {\n  borderColor: 2,\n  borderRadius: 2,\n  borderStyle: 2,\n  borderWidth: 2,\n  display: 2,\n  flex: 2,\n  inset: 2,\n  margin: 2,\n  overflow: 2,\n  overscrollBehavior: 2,\n  padding: 2,\n  insetBlock: 2.1,\n  insetInline: 2.1,\n  marginInline: 2.1,\n  marginBlock: 2.1,\n  paddingInline: 2.1,\n  paddingBlock: 2.1,\n  borderBlockStartColor: 2.2,\n  borderBlockStartStyle: 2.2,\n  borderBlockStartWidth: 2.2,\n  borderBlockEndColor: 2.2,\n  borderBlockEndStyle: 2.2,\n  borderBlockEndWidth: 2.2,\n  borderInlineStartColor: 2.2,\n  borderInlineStartStyle: 2.2,\n  borderInlineStartWidth: 2.2,\n  borderInlineEndColor: 2.2,\n  borderInlineEndStyle: 2.2,\n  borderInlineEndWidth: 2.2,\n  borderEndStartRadius: 2.2,\n  borderEndEndRadius: 2.2,\n  borderStartStartRadius: 2.2,\n  borderStartEndRadius: 2.2,\n  insetBlockEnd: 2.2,\n  insetBlockStart: 2.2,\n  insetInlineEnd: 2.2,\n  insetInlineStart: 2.2,\n  marginBlockStart: 2.2,\n  marginBlockEnd: 2.2,\n  marginInlineStart: 2.2,\n  marginInlineEnd: 2.2,\n  paddingBlockStart: 2.2,\n  paddingBlockEnd: 2.2,\n  paddingInlineStart: 2.2,\n  paddingInlineEnd: 2.2\n};\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\nconst PROPERTIES_FLIP = {\n  [borderTopLeftRadius]: borderTopRightRadius,\n  [borderTopRightRadius]: borderTopLeftRadius,\n  [borderBottomLeftRadius]: borderBottomRightRadius,\n  [borderBottomRightRadius]: borderBottomLeftRadius,\n  [borderLeftColor]: borderRightColor,\n  [borderLeftStyle]: borderRightStyle,\n  [borderLeftWidth]: borderRightWidth,\n  [borderRightColor]: borderLeftColor,\n  [borderRightStyle]: borderLeftStyle,\n  [borderRightWidth]: borderLeftWidth,\n  [left]: right,\n  [marginLeft]: marginRight,\n  [marginRight]: marginLeft,\n  [paddingLeft]: paddingRight,\n  [paddingRight]: paddingLeft,\n  [right]: left\n};\nconst PROPERTIES_I18N = {\n  borderStartStartRadius: borderTopLeftRadius,\n  borderStartEndRadius: borderTopRightRadius,\n  borderEndStartRadius: borderBottomLeftRadius,\n  borderEndEndRadius: borderBottomRightRadius,\n  borderInlineStartColor: borderLeftColor,\n  borderInlineStartStyle: borderLeftStyle,\n  borderInlineStartWidth: borderLeftWidth,\n  borderInlineEndColor: borderRightColor,\n  borderInlineEndStyle: borderRightStyle,\n  borderInlineEndWidth: borderRightWidth,\n  insetInlineEnd: right,\n  insetInlineStart: left,\n  marginInlineStart: marginLeft,\n  marginInlineEnd: marginRight,\n  paddingInlineStart: paddingLeft,\n  paddingInlineEnd: paddingRight\n};\nconst PROPERTIES_VALUE = ['clear', 'float', 'textAlign'];\nexport function atomic(style) {\n  const compiledStyle = {\n    $$css: true\n  };\n  const compiledRules = [];\n  function atomicCompile(srcProp, prop, value) {\n    const valueString = stringifyValueWithProperty(value, prop);\n    const cacheKey = prop + valueString;\n    const cachedResult = cache.get(cacheKey);\n    let identifier;\n    if (cachedResult != null) {\n      identifier = cachedResult[0];\n      compiledRules.push(cachedResult[1]);\n    } else {\n      const v = srcProp !== prop ? cacheKey : valueString;\n      identifier = createIdentifier('r', srcProp, v);\n      const order = customGroup[srcProp] || atomicGroup;\n      const rules = createAtomicRules(identifier, prop, value);\n      const orderedRules = [rules, order];\n      compiledRules.push(orderedRules);\n      cache.set(cacheKey, [identifier, orderedRules]);\n    }\n    return identifier;\n  }\n  Object.keys(style).sort().forEach(srcProp => {\n    const value = style[srcProp];\n    if (value != null) {\n      let localizeableValue;\n      if (PROPERTIES_VALUE.indexOf(srcProp) > -1) {\n        const left = atomicCompile(srcProp, srcProp, 'left');\n        const right = atomicCompile(srcProp, srcProp, 'right');\n        if (value === 'start') {\n          localizeableValue = [left, right];\n        } else if (value === 'end') {\n          localizeableValue = [right, left];\n        }\n      }\n      const propPolyfill = PROPERTIES_I18N[srcProp];\n      if (propPolyfill != null) {\n        const ltr = atomicCompile(srcProp, propPolyfill, value);\n        const rtl = atomicCompile(srcProp, PROPERTIES_FLIP[propPolyfill], value);\n        localizeableValue = [ltr, rtl];\n      }\n      if (srcProp === 'transitionProperty') {\n        const values = Array.isArray(value) ? value : [value];\n        const polyfillIndices = [];\n        for (let i = 0; i < values.length; i++) {\n          const val = values[i];\n          if (typeof val === 'string' && PROPERTIES_I18N[val] != null) {\n            polyfillIndices.push(i);\n          }\n        }\n        if (polyfillIndices.length > 0) {\n          const ltrPolyfillValues = [...values];\n          const rtlPolyfillValues = [...values];\n          polyfillIndices.forEach(i => {\n            const ltrVal = ltrPolyfillValues[i];\n            if (typeof ltrVal === 'string') {\n              const ltrPolyfill = PROPERTIES_I18N[ltrVal];\n              const rtlPolyfill = PROPERTIES_FLIP[ltrPolyfill];\n              ltrPolyfillValues[i] = ltrPolyfill;\n              rtlPolyfillValues[i] = rtlPolyfill;\n              const ltr = atomicCompile(srcProp, srcProp, ltrPolyfillValues);\n              const rtl = atomicCompile(srcProp, srcProp, rtlPolyfillValues);\n              localizeableValue = [ltr, rtl];\n            }\n          });\n        }\n      }\n      if (localizeableValue == null) {\n        localizeableValue = atomicCompile(srcProp, srcProp, value);\n      } else {\n        compiledStyle['$$css$localize'] = true;\n      }\n      compiledStyle[srcProp] = localizeableValue;\n    }\n  });\n  return [compiledStyle, compiledRules];\n}\nexport function classic(style, name) {\n  const compiledStyle = {\n    $$css: true\n  };\n  const compiledRules = [];\n  const {\n      animationKeyframes\n    } = style,\n    rest = _objectWithoutProperties(style, _excluded);\n  const identifier = createIdentifier('css', name, JSON.stringify(style));\n  const selector = `.${identifier}`;\n  let animationName;\n  if (animationKeyframes != null) {\n    const [animationNames, keyframesRules] = processKeyframesValue(animationKeyframes);\n    animationName = animationNames.join(',');\n    compiledRules.push(...keyframesRules);\n  }\n  const block = createDeclarationBlock(_objectSpread(_objectSpread({}, rest), {}, {\n    animationName\n  }));\n  compiledRules.push(`${selector}${block}`);\n  compiledStyle[identifier] = identifier;\n  return [compiledStyle, [[compiledRules, classicGroup]]];\n}\nexport function inline(originalStyle, isRTL) {\n  const style = originalStyle || emptyObject;\n  const frozenProps = {};\n  const nextStyle = {};\n  for (const originalProp in style) {\n    const originalValue = style[originalProp];\n    let prop = originalProp;\n    let value = originalValue;\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n    if (PROPERTIES_VALUE.indexOf(originalProp) > -1) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      }\n    }\n    const propPolyfill = PROPERTIES_I18N[originalProp];\n    if (propPolyfill != null) {\n      prop = isRTL ? PROPERTIES_FLIP[propPolyfill] : propPolyfill;\n    }\n    if (originalProp === 'transitionProperty') {\n      const originalValues = Array.isArray(originalValue) ? originalValue : [originalValue];\n      originalValues.forEach((val, i) => {\n        if (typeof val === 'string') {\n          const valuePolyfill = PROPERTIES_I18N[val];\n          if (valuePolyfill != null) {\n            originalValues[i] = isRTL ? PROPERTIES_FLIP[valuePolyfill] : valuePolyfill;\n            value = originalValues.join(' ');\n          }\n        }\n      });\n    }\n    if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n    if (prop === originalProp) {\n      frozenProps[prop] = true;\n    }\n  }\n  return createReactDOMStyle(nextStyle, true);\n}\nexport function stringifyValueWithProperty(value, property) {\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string' ? JSON.stringify(normalizedValue || '') : normalizedValue;\n}\nfunction createAtomicRules(identifier, property, value) {\n  const rules = [];\n  const selector = `.${identifier}`;\n  switch (property) {\n    case 'animationKeyframes':\n      {\n        const [animationNames, keyframesRules] = processKeyframesValue(value);\n        const block = createDeclarationBlock({\n          animationName: animationNames.join(',')\n        });\n        rules.push(`${selector}${block}`, ...keyframesRules);\n        break;\n      }\n    case 'placeholderTextColor':\n      {\n        const block = createDeclarationBlock({\n          color: value,\n          opacity: 1\n        });\n        rules.push(`${selector}::-webkit-input-placeholder${block}`, `${selector}::-moz-placeholder${block}`, `${selector}:-ms-input-placeholder${block}`, `${selector}::placeholder${block}`);\n        break;\n      }\n    case 'pointerEvents':\n      {\n        let finalValue = value;\n        if (value === 'auto' || value === 'box-only') {\n          finalValue = 'auto!important';\n          if (value === 'box-only') {\n            const block = createDeclarationBlock({\n              pointerEvents: 'none'\n            });\n            rules.push(`${selector}>*${block}`);\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          finalValue = 'none!important';\n          if (value === 'box-none') {\n            const block = createDeclarationBlock({\n              pointerEvents: 'auto'\n            });\n            rules.push(`${selector}>*${block}`);\n          }\n        }\n        const block = createDeclarationBlock({\n          pointerEvents: finalValue\n        });\n        rules.push(`${selector}${block}`);\n        break;\n      }\n    case 'scrollbarWidth':\n      {\n        if (value === 'none') {\n          rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n        }\n        const block = createDeclarationBlock({\n          scrollbarWidth: value\n        });\n        rules.push(`${selector}${block}`);\n        break;\n      }\n    default:\n      {\n        const block = createDeclarationBlock({\n          [property]: value\n        });\n        rules.push(`${selector}${block}`);\n        break;\n      }\n  }\n  return rules;\n}\nfunction createDeclarationBlock(style) {\n  const domStyle = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle).map(property => {\n    const value = domStyle[property];\n    const prop = hyphenateStyleName(property);\n    if (Array.isArray(value)) {\n      return value.map(v => `${prop}:${v}`).join(';');\n    } else {\n      return `${prop}:${value}`;\n    }\n  }).sort().join(';');\n  return `{${declarationsString};}`;\n}\nfunction createIdentifier(prefix, name, key) {\n  const hashedString = hash(name + key);\n  return process.env.NODE_ENV !== 'production' ? `${prefix}-${name}-${hashedString}` : `${prefix}-${hashedString}`;\n}\nfunction createKeyframes(keyframes) {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', JSON.stringify(keyframes));\n  const steps = '{' + Object.keys(keyframes).map(stepName => {\n    const rule = keyframes[stepName];\n    const block = createDeclarationBlock(rule);\n    return `${stepName}${block}`;\n  }).join('') + '}';\n  const rules = prefixes.map(prefix => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return [identifier, rules];\n}\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n  const animationNames = [];\n  const rules = [];\n  const value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n  value.forEach(keyframes => {\n    if (typeof keyframes === 'string') {\n      animationNames.push(keyframes);\n    } else {\n      const [identifier, keyframesRules] = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n  return [animationNames, rules];\n}","map":{"version":3,"names":["createReactDOMStyle","hash","hyphenateStyleName","normalizeValueWithProperty","prefixStyles","cache","Map","emptyObject","classicGroup","atomicGroup","customGroup","borderColor","borderRadius","borderStyle","borderWidth","display","flex","inset","margin","overflow","overscrollBehavior","padding","insetBlock","insetInline","marginInline","marginBlock","paddingInline","paddingBlock","borderBlockStartColor","borderBlockStartStyle","borderBlockStartWidth","borderBlockEndColor","borderBlockEndStyle","borderBlockEndWidth","borderInlineStartColor","borderInlineStartStyle","borderInlineStartWidth","borderInlineEndColor","borderInlineEndStyle","borderInlineEndWidth","borderEndStartRadius","borderEndEndRadius","borderStartStartRadius","borderStartEndRadius","insetBlockEnd","insetBlockStart","insetInlineEnd","insetInlineStart","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","paddingBlockStart","paddingBlockEnd","paddingInlineStart","paddingInlineEnd","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_FLIP","PROPERTIES_I18N","PROPERTIES_VALUE","atomic","style","compiledStyle","$$css","compiledRules","atomicCompile","srcProp","prop","value","valueString","stringifyValueWithProperty","cacheKey","cachedResult","get","identifier","push","v","createIdentifier","order","rules","createAtomicRules","orderedRules","set","Object","keys","sort","forEach","localizeableValue","indexOf","propPolyfill","ltr","rtl","values","Array","isArray","polyfillIndices","i","length","val","ltrPolyfillValues","rtlPolyfillValues","ltrVal","ltrPolyfill","rtlPolyfill","classic","name","animationKeyframes","rest","_objectWithoutProperties","_excluded","JSON","stringify","selector","animationName","animationNames","keyframesRules","processKeyframesValue","join","block","createDeclarationBlock","_objectSpread","inline","originalStyle","isRTL","frozenProps","nextStyle","originalProp","originalValue","prototype","hasOwnProperty","call","originalValues","valuePolyfill","property","normalizedValue","color","opacity","finalValue","pointerEvents","scrollbarWidth","domStyle","declarationsString","map","prefix","key","hashedString","process","env","NODE_ENV","createKeyframes","keyframes","prefixes","steps","stepName","rule","keyframesValue","Error"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/exports/StyleSheet/compiler/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport createReactDOMStyle from './createReactDOMStyle';\nimport hash from './hash';\nimport hyphenateStyleName from './hyphenateStyleName';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport prefixStyles from '../../../modules/prefixStyles';\n\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = [Rules, number];\ntype CompiledStyle = {\n  $$css: boolean,\n  $$css$localize?: boolean,\n  [key: string]: string | Array<string>\n};\ntype CompilerOutput = [CompiledStyle, Array<RulesData>];\n\nconst cache = new Map();\nconst emptyObject = {};\n\nconst classicGroup = 1;\nconst atomicGroup = 3;\nconst customGroup: { [key: string]: number } = {\n  borderColor: 2,\n  borderRadius: 2,\n  borderStyle: 2,\n  borderWidth: 2,\n  display: 2,\n  flex: 2,\n  inset: 2,\n  margin: 2,\n  overflow: 2,\n  overscrollBehavior: 2,\n  padding: 2,\n  insetBlock: 2.1,\n  insetInline: 2.1,\n  marginInline: 2.1,\n  marginBlock: 2.1,\n  paddingInline: 2.1,\n  paddingBlock: 2.1,\n  borderBlockStartColor: 2.2,\n  borderBlockStartStyle: 2.2,\n  borderBlockStartWidth: 2.2,\n  borderBlockEndColor: 2.2,\n  borderBlockEndStyle: 2.2,\n  borderBlockEndWidth: 2.2,\n  borderInlineStartColor: 2.2,\n  borderInlineStartStyle: 2.2,\n  borderInlineStartWidth: 2.2,\n  borderInlineEndColor: 2.2,\n  borderInlineEndStyle: 2.2,\n  borderInlineEndWidth: 2.2,\n  borderEndStartRadius: 2.2,\n  borderEndEndRadius: 2.2,\n  borderStartStartRadius: 2.2,\n  borderStartEndRadius: 2.2,\n  insetBlockEnd: 2.2,\n  insetBlockStart: 2.2,\n  insetInlineEnd: 2.2,\n  insetInlineStart: 2.2,\n  marginBlockStart: 2.2,\n  marginBlockEnd: 2.2,\n  marginInlineStart: 2.2,\n  marginInlineEnd: 2.2,\n  paddingBlockStart: 2.2,\n  paddingBlockEnd: 2.2,\n  paddingInlineStart: 2.2,\n  paddingInlineEnd: 2.2\n};\n\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\n\n// Map of LTR property names to their BiDi equivalent.\nconst PROPERTIES_FLIP: { [key: string]: string } = {\n  [borderTopLeftRadius]: borderTopRightRadius,\n  [borderTopRightRadius]: borderTopLeftRadius,\n  [borderBottomLeftRadius]: borderBottomRightRadius,\n  [borderBottomRightRadius]: borderBottomLeftRadius,\n  [borderLeftColor]: borderRightColor,\n  [borderLeftStyle]: borderRightStyle,\n  [borderLeftWidth]: borderRightWidth,\n  [borderRightColor]: borderLeftColor,\n  [borderRightStyle]: borderLeftStyle,\n  [borderRightWidth]: borderLeftWidth,\n  [left]: right,\n  [marginLeft]: marginRight,\n  [marginRight]: marginLeft,\n  [paddingLeft]: paddingRight,\n  [paddingRight]: paddingLeft,\n  [right]: left\n};\n\n// Map of I18N property names to their LTR equivalent.\nconst PROPERTIES_I18N: { [key: string]: string } = {\n  borderStartStartRadius: borderTopLeftRadius,\n  borderStartEndRadius: borderTopRightRadius,\n  borderEndStartRadius: borderBottomLeftRadius,\n  borderEndEndRadius: borderBottomRightRadius,\n  borderInlineStartColor: borderLeftColor,\n  borderInlineStartStyle: borderLeftStyle,\n  borderInlineStartWidth: borderLeftWidth,\n  borderInlineEndColor: borderRightColor,\n  borderInlineEndStyle: borderRightStyle,\n  borderInlineEndWidth: borderRightWidth,\n  insetInlineEnd: right,\n  insetInlineStart: left,\n  marginInlineStart: marginLeft,\n  marginInlineEnd: marginRight,\n  paddingInlineStart: paddingLeft,\n  paddingInlineEnd: paddingRight\n};\n\nconst PROPERTIES_VALUE = ['clear', 'float', 'textAlign'];\n\nexport function atomic(style: Style): CompilerOutput {\n  const compiledStyle: CompiledStyle = { $$css: true };\n  const compiledRules = [];\n\n  function atomicCompile(srcProp, prop, value) {\n    const valueString = stringifyValueWithProperty(value, prop);\n    const cacheKey = prop + valueString;\n    const cachedResult = cache.get(cacheKey);\n    let identifier;\n    if (cachedResult != null) {\n      identifier = cachedResult[0];\n      compiledRules.push(cachedResult[1]);\n    } else {\n      const v = srcProp !== prop ? cacheKey : valueString;\n      identifier = createIdentifier('r', srcProp, v);\n      const order = customGroup[srcProp] || atomicGroup;\n      const rules = createAtomicRules(identifier, prop, value);\n      const orderedRules = [rules, order];\n      compiledRules.push(orderedRules);\n      cache.set(cacheKey, [identifier, orderedRules]);\n    }\n    return identifier;\n  }\n\n  Object.keys(style)\n    .sort()\n    .forEach((srcProp) => {\n      const value = style[srcProp];\n      if (value != null) {\n        let localizeableValue;\n        // BiDi flip values\n        if (PROPERTIES_VALUE.indexOf(srcProp) > -1) {\n          const left = atomicCompile(srcProp, srcProp, 'left');\n          const right = atomicCompile(srcProp, srcProp, 'right');\n          if (value === 'start') {\n            localizeableValue = [left, right];\n          } else if (value === 'end') {\n            localizeableValue = [right, left];\n          }\n        }\n        // BiDi flip properties\n        const propPolyfill = PROPERTIES_I18N[srcProp];\n        if (propPolyfill != null) {\n          const ltr = atomicCompile(srcProp, propPolyfill, value);\n          const rtl = atomicCompile(\n            srcProp,\n            PROPERTIES_FLIP[propPolyfill],\n            value\n          );\n          localizeableValue = [ltr, rtl];\n        }\n        // BiDi flip transitionProperty value\n        if (srcProp === 'transitionProperty') {\n          const values = Array.isArray(value) ? value : [value];\n          const polyfillIndices = [];\n\n          for (let i = 0; i < values.length; i++) {\n            const val = values[i];\n            if (typeof val === 'string' && PROPERTIES_I18N[val] != null) {\n              polyfillIndices.push(i);\n            }\n          }\n\n          if (polyfillIndices.length > 0) {\n            const ltrPolyfillValues = [...values];\n            const rtlPolyfillValues = [...values];\n            polyfillIndices.forEach((i) => {\n              const ltrVal = ltrPolyfillValues[i];\n              if (typeof ltrVal === 'string') {\n                const ltrPolyfill = PROPERTIES_I18N[ltrVal];\n                const rtlPolyfill = PROPERTIES_FLIP[ltrPolyfill];\n                ltrPolyfillValues[i] = ltrPolyfill;\n                rtlPolyfillValues[i] = rtlPolyfill;\n                const ltr = atomicCompile(srcProp, srcProp, ltrPolyfillValues);\n                const rtl = atomicCompile(srcProp, srcProp, rtlPolyfillValues);\n                localizeableValue = [ltr, rtl];\n              }\n            });\n          }\n        }\n\n        if (localizeableValue == null) {\n          localizeableValue = atomicCompile(srcProp, srcProp, value);\n        } else {\n          compiledStyle['$$css$localize'] = true;\n        }\n\n        compiledStyle[srcProp] = localizeableValue;\n      }\n    });\n\n  return [compiledStyle, compiledRules];\n}\n\n/**\n * Compile simple style object to classic CSS rules.\n * No support for 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function classic(style: Style, name: string): CompilerOutput {\n  const compiledStyle = { $$css: true };\n  const compiledRules = [];\n\n  const { animationKeyframes, ...rest } = style;\n  const identifier = createIdentifier('css', name, JSON.stringify(style));\n  const selector = `.${identifier}`;\n  let animationName;\n  if (animationKeyframes != null) {\n    const [animationNames, keyframesRules] =\n      processKeyframesValue(animationKeyframes);\n    animationName = animationNames.join(',');\n    compiledRules.push(...keyframesRules);\n  }\n  const block = createDeclarationBlock({ ...rest, animationName });\n  compiledRules.push(`${selector}${block}`);\n\n  compiledStyle[identifier] = identifier;\n  return [compiledStyle, [[compiledRules, classicGroup]]];\n}\n\n/**\n * Compile simple style object to inline DOM styles.\n * No support for 'animationKeyframes', 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function inline(\n  originalStyle: Style,\n  isRTL?: boolean\n): { [key: string]: mixed } {\n  const style = originalStyle || emptyObject;\n  const frozenProps = {};\n  const nextStyle = {};\n\n  for (const originalProp in style) {\n    const originalValue = style[originalProp];\n    let prop = originalProp;\n    let value = originalValue;\n\n    if (\n      !Object.prototype.hasOwnProperty.call(style, originalProp) ||\n      originalValue == null\n    ) {\n      continue;\n    }\n\n    // BiDi flip values\n    if (PROPERTIES_VALUE.indexOf(originalProp) > -1) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      }\n    }\n    // BiDi flip properties\n    const propPolyfill = PROPERTIES_I18N[originalProp];\n    if (propPolyfill != null) {\n      prop = isRTL ? PROPERTIES_FLIP[propPolyfill] : propPolyfill;\n    }\n    // BiDi flip transitionProperty value\n    if (originalProp === 'transitionProperty') {\n      // $FlowFixMe\n      const originalValues = Array.isArray(originalValue)\n        ? originalValue\n        : [originalValue];\n      originalValues.forEach((val, i) => {\n        if (typeof val === 'string') {\n          const valuePolyfill = PROPERTIES_I18N[val];\n          if (valuePolyfill != null) {\n            originalValues[i] = isRTL\n              ? PROPERTIES_FLIP[valuePolyfill]\n              : valuePolyfill;\n\n            value = originalValues.join(' ');\n          }\n        }\n      });\n    }\n\n    // Create finalized style\n    if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (prop === originalProp) {\n      frozenProps[prop] = true;\n    }\n\n    //    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n    //    frozenProps[prop] = true;\n    //}\n  }\n\n  return createReactDOMStyle(nextStyle, true);\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(\n  value: Value,\n  property: ?string\n): string {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(identifier: string, property, value): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const [animationNames, keyframesRules] = processKeyframesValue(value);\n      const block = createDeclarationBlock({\n        animationName: animationNames.join(',')\n      });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ pointerEvents: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ pointerEvents: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ pointerEvents: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ scrollbarWidth: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style): string {\n  const domStyle = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map((property) => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map((v) => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix: string, name: string, key: string): string {\n  const hashedString = hash(name + key);\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes: Object): [string, Rules] {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier(\n    'r',\n    'animation',\n    JSON.stringify(keyframes)\n  );\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map((stepName) => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map((prefix) => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return [identifier, rules];\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames = [];\n  const rules = [];\n  const value = Array.isArray(keyframesValue)\n    ? keyframesValue\n    : [keyframesValue];\n\n  value.forEach((keyframes) => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const [identifier, keyframesRules] = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return [animationNames, rules];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}