{"ast":null,"code":"import * as React from 'react';\nimport * as ResponderSystem from './ResponderSystem';\nconst emptyObject = {};\nlet idCounter = 0;\nfunction useStable(getInitialValue) {\n  const ref = React.useRef(null);\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\nexport default function useResponderEvents(hostRef, config = emptyObject) {\n  const id = useStable(() => idCounter++);\n  const isAttachedRef = React.useRef(false);\n  React.useEffect(() => {\n    ResponderSystem.attachListeners();\n    return () => {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]);\n  React.useEffect(() => {\n    const {\n      onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture,\n      onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder,\n      onStartShouldSetResponderCapture\n    } = config;\n    const requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null;\n    const node = hostRef.current;\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}","map":{"version":3,"names":["React","ResponderSystem","emptyObject","idCounter","useStable","getInitialValue","ref","useRef","current","useResponderEvents","hostRef","config","id","isAttachedRef","useEffect","attachListeners","removeNode","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","requiresResponderSystem","node","addNode","useDebugValue","isResponder","getResponderNode"],"sources":["C:/Users/Kellao/Desktop/mathsprojecton-main/node_modules/react-native-web/src/modules/useResponderEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\n\nimport type { ResponderConfig } from './ResponderSystem';\n\nimport * as React from 'react';\nimport * as ResponderSystem from './ResponderSystem';\n\nconst emptyObject = {};\nlet idCounter = 0;\n\nfunction useStable<T>(getInitialValue: () => T): T {\n  const ref = React.useRef<T | null>(null);\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\n\nexport default function useResponderEvents(\n  hostRef: any,\n  config: ResponderConfig = emptyObject\n) {\n  const id = useStable(() => idCounter++);\n  const isAttachedRef = React.useRef(false);\n\n  // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n  React.useEffect(() => {\n    ResponderSystem.attachListeners();\n    return () => {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]);\n\n  // Register and unregister with the Responder System as necessary\n  React.useEffect(() => {\n    const {\n      onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture,\n      onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder,\n      onStartShouldSetResponderCapture\n    } = config;\n\n    const requiresResponderSystem =\n      onMoveShouldSetResponder != null ||\n      onMoveShouldSetResponderCapture != null ||\n      onScrollShouldSetResponder != null ||\n      onScrollShouldSetResponderCapture != null ||\n      onSelectionChangeShouldSetResponder != null ||\n      onSelectionChangeShouldSetResponderCapture != null ||\n      onStartShouldSetResponder != null ||\n      onStartShouldSetResponderCapture != null;\n\n    const node = hostRef.current;\n\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}\n"],"mappings":"AAqBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,eAAe,MAAM,mBAAmB;AAEpD,MAAMC,WAAW,GAAG,CAAC,CAAC;AACtB,IAAIC,SAAS,GAAG,CAAC;AAEjB,SAASC,SAASA,CAAIC,eAAwB,EAAK;EACjD,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAW,IAAI,CAAC;EACxC,IAAID,GAAG,CAACE,OAAO,IAAI,IAAI,EAAE;IACvBF,GAAG,CAACE,OAAO,GAAGH,eAAe,CAAC,CAAC;EACjC;EACA,OAAOC,GAAG,CAACE,OAAO;AACpB;AAEA,eAAe,SAASC,kBAAkBA,CACxCC,OAAY,EACZC,MAAuB,GAAGT,WAAW,EACrC;EACA,MAAMU,EAAE,GAAGR,SAAS,CAAC,MAAMD,SAAS,EAAE,CAAC;EACvC,MAAMU,aAAa,GAAGb,KAAK,CAACO,MAAM,CAAC,KAAK,CAAC;EAKzCP,KAAK,CAACc,SAAS,CAAC,MAAM;IACpBb,eAAe,CAACc,eAAe,CAAC,CAAC;IACjC,OAAO,MAAM;MACXd,eAAe,CAACe,UAAU,CAACJ,EAAE,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EAGRZ,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,MAAM;MACJG,wBAAwB;MACxBC,+BAA+B;MAC/BC,0BAA0B;MAC1BC,iCAAiC;MACjCC,mCAAmC;MACnCC,0CAA0C;MAC1CC,yBAAyB;MACzBC;IACF,CAAC,GAAGb,MAAM;IAEV,MAAMc,uBAAuB,GAC3BR,wBAAwB,IAAI,IAAI,IAChCC,+BAA+B,IAAI,IAAI,IACvCC,0BAA0B,IAAI,IAAI,IAClCC,iCAAiC,IAAI,IAAI,IACzCC,mCAAmC,IAAI,IAAI,IAC3CC,0CAA0C,IAAI,IAAI,IAClDC,yBAAyB,IAAI,IAAI,IACjCC,gCAAgC,IAAI,IAAI;IAE1C,MAAME,IAAI,GAAGhB,OAAO,CAACF,OAAO;IAE5B,IAAIiB,uBAAuB,EAAE;MAC3BxB,eAAe,CAAC0B,OAAO,CAACf,EAAE,EAAEc,IAAI,EAAEf,MAAM,CAAC;MACzCE,aAAa,CAACL,OAAO,GAAG,IAAI;IAC9B,CAAC,MAAM,IAAIK,aAAa,CAACL,OAAO,EAAE;MAChCP,eAAe,CAACe,UAAU,CAACJ,EAAE,CAAC;MAC9BC,aAAa,CAACL,OAAO,GAAG,KAAK;IAC/B;EACF,CAAC,EAAE,CAACG,MAAM,EAAED,OAAO,EAAEE,EAAE,CAAC,CAAC;EAEzBZ,KAAK,CAAC4B,aAAa,CAAC;IAClBC,WAAW,EAAEnB,OAAO,CAACF,OAAO,KAAKP,eAAe,CAAC6B,gBAAgB,CAAC;EACpE,CAAC,CAAC;EACF9B,KAAK,CAAC4B,aAAa,CAACjB,MAAM,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}